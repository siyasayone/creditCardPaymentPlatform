package com.example.creditCardPayment.controllers.customerCreditCard;

import java.text.ParseException;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.creditCardPayment.dto.customerCreditCard.CardDTO;
import com.example.creditCardPayment.dto.customerCreditCard.CustomerCardDTO;
import com.example.creditCardPayment.entity.customerCreditCard.CustomerCreditCard;
import com.example.creditCardPayment.exception.DateException;
import com.example.creditCardPayment.security.UserDetailsImpl;
import com.example.creditCardPayment.services.customerCards.CustomerCardService;


@RestController
@RequestMapping("/creditcardPayment/card")
public class CustomerCreditCardController {
	
	@Autowired
	CustomerCardService customerCardService;


	@PostMapping("/addCard")
	public ResponseEntity<CustomerCreditCard> addCustomerCard(@Valid @RequestBody CardDTO customerCardDTO,
			@AuthenticationPrincipal UserDetailsImpl loggeduser) throws ParseException {
		CustomerCreditCard card = customerCardService.addCustomerCard(customerCardDTO,loggeduser);
		return new ResponseEntity<>(card, HttpStatus.OK);
	}

	@PostMapping("/updateCard")
	public ResponseEntity<CustomerCreditCard> updateCard(@RequestBody CustomerCardDTO customerCardDTO,
			@AuthenticationPrincipal UserDetailsImpl loggeduser) throws ParseException, DateException {
		CustomerCreditCard card =customerCardService.updateCard(customerCardDTO,loggeduser);
		return new ResponseEntity<>(card, HttpStatus.OK);
	}
	
	@GetMapping("/removeCard")
	public ResponseEntity<Object> removeCard(@NotNull Long cardNumber) {
		return customerCardService.removeCard(cardNumber);

	}
	
	@GetMapping("/removeAccount")
	public ResponseEntity<Object> removeAccount(@AuthenticationPrincipal UserDetailsImpl loggeduser) {
		return customerCardService.removeAccount(loggeduser);

	}
	
	@GetMapping("/showCardDetails")
	public CardDTO showCardDetails(@AuthenticationPrincipal UserDetailsImpl loggeduser) {
		return customerCardService.showCardDetails(loggeduser);

	}

}
